import submission as sb
import numpy as np

def check_match(res, expected):
    matrix_match = np.alltrue(np.isclose(res[0], expected[0]))
    partition_match = res[1] == expected[1]
    if matrix_match and partition_match:
        return True
    else:
        return res

def test_q1_v_opt_dp():
    '''
    >>> res = sb.v_opt_dp([3, 1, 18, 11, 13, 17], 1)
    >>> check_match(res, ([[251.5, 184.0, 32.75, 18.666666666666664, 8.0, 0.0]], [[3, 1, 18, 11, 13, 17]]))
    True

    >>> res = sb.v_opt_dp([3, 1, 18, 11, 13, 17], 2)
    >>> check_match(res, ([[-1, 184.0, 32.75, 18.666666666666664, 8.0, 0.0], [34.75, 32.75, 18.666666666666664, 2.0, 0.0, -1]], [[3, 1], [18, 11, 13, 17]]))
    True

    >>> res = sb.v_opt_dp([3, 1, 18, 11, 13, 17], 3)
    >>> check_match(res, ([[-1, -1, 32.75, 18.666666666666664, 8.0, 0.0], [-1, 32.75, 18.666666666666664, 2.0, 0.0, -1], [20.666666666666664, 18.666666666666664, 2.0, 0.0, -1, -1]], [[3, 1], [18], [11, 13, 17]]))
    True

    >>> res = sb.v_opt_dp([3, 1, 18, 11, 13, 17], 4)
    >>> check_match(res, ([[-1, -1, -1, 18.666666666666664, 8.0, 0.0], [-1, -1, 18.666666666666664, 2.0, 0.0, -1], [-1, 18.666666666666664, 2.0, 0.0, -1, -1], [4.0, 2.0, 0.0, -1, -1, -1]], [[3, 1], [18], [11, 13], [17]]))
    True

    >>> res = sb.v_opt_dp([1, 2, 7, 9, 10, 17, 18, 25], 1)
    >>> check_match(res, ([[482.875, 365.7142857142857, 235.33333333333334, 170.8, 113.0, 38.0, 24.5, 0.0]], [[1, 2, 7, 9, 10, 17, 18, 25]]))
    True
    
    >>> res = sb.v_opt_dp([1, 2, 7, 9, 10, 17, 18, 25], 2)
    >>> check_match(res, ([[-1, 365.7142857142857, 235.33333333333334, 170.8, 113.0, 38.0, 24.5, 0.0], [104.8, 76.0, 42.666666666666664, 38.5, 38.0, 0.5, 0.0, -1]], [[1, 2, 7, 9, 10], [17, 18, 25]]))
    True
    
    >>> res = sb.v_opt_dp([1, 2, 7, 9, 10, 17, 18, 25], 3)
    >>> check_match(res, ([[-1, -1, 235.33333333333334, 170.8, 113.0, 38.0, 24.5, 0.0], [-1, 76.0, 42.666666666666664, 38.5, 38.0, 0.5, 0.0, -1], [43.166666666666664, 38.5, 5.166666666666667, 1.0, 0.5, 0.0, -1, -1]], [[1, 2], [7, 9, 10], [17, 18, 25]]))
    True
    
    >>> res = sb.v_opt_dp([1, 2, 7, 9, 10, 17, 18, 25], 4)
    >>> check_match(res, ([[-1, -1, -1, 170.8, 113.0, 38.0, 24.5, 0.0], [-1, -1, 42.666666666666664, 38.5, 38.0, 0.5, 0.0, -1], [-1, 38.5, 5.166666666666667, 1.0, 0.5, 0.0, -1, -1], [5.666666666666667, 5.166666666666667, 1.0, 0.5, 0.0, -1, -1, -1]], [[1, 2], [7, 9, 10], [17, 18], [25]]))
    True
    
    >>> res = sb.v_opt_dp([1, 2, 7, 9, 10, 17, 18, 25], 5)
    >>> check_match(res, ([[-1, -1, -1, -1, 113.0, 38.0, 24.5, 0.0], [-1, -1, -1, 38.5, 38.0, 0.5, 0.0, -1], [-1, -1, 5.166666666666667, 1.0, 0.5, 0.0, -1, -1], [-1, 5.166666666666667, 1.0, 0.5, 0.0, -1, -1, -1], [1.5, 1.0, 0.5, 0.0, -1, -1, -1, -1]], [[1, 2], [7], [9, 10], [17, 18], [25]]))
    True

    >>> res = sb.v_opt_dp([1, 50, 51, 52, 53, 100], 1)
    >>> check_match(res, ([[4906.833333333334, 1886.8000000000002, 1730.0, 1504.6666666666665, 1104.5, 0.0]], [[1, 50, 51, 52, 53, 100]]))
    True

    >>> res = sb.v_opt_dp([1, 50, 51, 52, 53, 100], 2)
    >>> check_match(res, ([[-1, 1886.8000000000002, 1730.0, 1504.6666666666665, 1104.5, 0.0], [1886.8000000000002, 5.0, 2.0, 0.5, 0.0, -1]], [[1], [50, 51, 52, 53, 100]]))
    True

    >>> res = sb.v_opt_dp([1, 50, 51, 52, 53, 100], 3)
    >>> check_match(res, ([[-1, -1, 1730.0, 1504.6666666666665, 1104.5, 0.0], [-1, 5.0, 2.0, 0.5, 0.0, -1], [5.0, 1.0, 0.5, 0.0, -1, -1]], [[1], [50, 51, 52, 53], [100]]))
    True

    >>> res = sb.v_opt_dp([1, 50, 51, 52, 53, 100], 4)
    >>> check_match(res, ([[-1, -1, -1, 1504.6666666666665, 1104.5, 0.0], [-1, -1, 2.0, 0.5, 0.0, -1], [-1, 1.0, 0.5, 0.0, -1, -1], [1.0, 0.5, 0.0, -1, -1, -1]], [[1], [50, 51], [52, 53], [100]]))
    True


    >>> res = sb.v_opt_dp([1, 50, 51, 52, 53, 100], 5)
    >>> check_match(res, ([[-1, -1, -1, -1, 1104.5, 0.0], [-1, -1, -1, 0.5, 0.0, -1], [-1, -1, 0.5, 0.0, -1, -1], [-1, 0.5, 0.0, -1, -1, -1], [0.5, 0.0, -1, -1, -1, -1]], [[1], [50], [51], [52, 53], [100]]))
    True


    >>> res = sb.v_opt_dp([1, 50, 51, 52, 53, 100], 6)
    >>> check_match(res, ([[-1, -1, -1, -1, -1, 0.0], [-1, -1, -1, -1, 0.0, -1], [-1, -1, -1, 0.0, -1, -1], [-1, -1, 0.0, -1, -1, -1], [-1, 0.0, -1, -1, -1, -1], [0.0, -1, -1, -1, -1, -1]], [[1], [50], [51], [52], [53], [100]]))
    True

    >>> res = sb.v_opt_dp([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9], 5)
    >>> check_match(res, ([[-1, -1, -1, -1, 2175.0724637681155, 2158.545454545454, 2141.8978102189785, 2125.128205128205, 2108.235294117647, 2091.217712177122, 2074.074074074074, 2056.802973977695, 2039.402985074627, 2021.8726591760296, 2004.2105263157898, 1986.415094339622, 1968.484848484849, 1950.4182509505704, 1932.2137404580149, 1913.8697318007664, 1895.3846153846155, 1876.7567567567576, 1857.9844961240312, 1839.0661478599222, 1820.0, 1800.7843137254904, 1781.4173228346456, 1761.897233201581, 1742.2222222222222, 1722.3904382470116, 1702.4000000000003, 1682.2489959839359, 1661.9354838709673, 1641.4574898785431, 1620.8130081300812, 1600.0000000000005, 1579.0163934426232, 1557.8600823045263, 1536.5289256198344, 1515.0207468879662, 1493.3333333333335, 1471.464435146444, 1449.4117647058824, 1427.1729957805906, 1404.7457627118642, 1382.1276595744685, 1359.3162393162393, 1336.3090128755362, 1313.1034482758619, 1289.69696969697, 1266.086956521739, 1242.270742358079, 1218.2456140350878, 1194.0088105726873, 1169.5575221238937, 1144.8888888888887, 1120.0, 1110.9596412556054, 1101.837837837838, 1092.6334841628964, 1083.3454545454542, 1073.9726027397257, 1064.5137614678902, 1054.967741935484, 1045.3333333333335, 1035.6093023255814, 1025.7943925233644, 1015.8873239436618, 1005.8867924528302, 995.7914691943129, 985.5999999999998, 975.3110047846889, 964.9230769230769, 954.4347826086955, 943.8446601941749, 933.151219512195, 922.3529411764707, 911.4482758620688, 900.4356435643564, 889.3134328358205, 878.0800000000002, 866.7336683417087, 855.272727272727, 843.695431472081, 831.9999999999997, 820.1846153846152, 808.2474226804121, 796.1865284974091, 784.0, 771.6858638743457, 759.2421052631581, 746.6666666666666, 733.9574468085107, 721.1122994652409, 708.1290322580646, 695.0054054054056, 681.7391304347827, 668.3278688524588, 654.7692307692307, 641.0607734806629, 627.2, 613.1843575418995, 599.011235955056, 584.6779661016949, 570.1818181818181, 555.52, 540.6896551724138, 525.6878612716762, 510.51162790697686, 495.1578947368421, 479.6235294117647, 463.9053254437871, 448.0, 443.97604790419166, 439.9036144578314, 435.7818181818181, 431.609756097561, 427.38650306748457, 423.1111111111111, 418.78260869565224, 414.4, 409.96226415094327, 405.4683544303797, 400.9171974522292, 396.3076923076924, 391.6387096774193, 386.9090909090909, 382.11764705882354, 377.2631578947368, 372.34437086092714, 367.36000000000007, 362.3087248322147, 357.1891891891892, 352.0, 346.7397260273972, 341.40689655172423, 336.0, 330.5174825174826, 324.95774647887333, 319.3191489361702, 313.6, 307.79856115107907, 301.9130434782609, 295.94160583941607, 289.88235294117646, 283.7333333333333, 277.4925373134328, 271.1578947368422, 264.7272727272727, 258.19847328244276, 251.56923076923078, 244.83720930232562, 238.0, 231.05511811023612, 224.00000000000006, 216.832, 209.5483870967741, 202.14634146341473, 194.6229508196722, 186.9752066115702, 179.20000000000007, 171.2941176470588, 163.25423728813558, 155.0769230769231, 146.75862068965523, 138.29565217391308, 129.6842105263158, 120.92035398230091, 112.0, 110.990990990991, 109.96363636363637, 108.91743119266052, 107.8518518518518, 106.76635514018692, 105.66037735849056, 104.53333333333336, 103.3846153846154, 102.21359223300969, 101.0196078431372, 99.80198019801979, 98.56000000000002, 97.29292929292933, 95.99999999999997, 94.68041237113401, 93.3333333333333, 91.95789473684206, 90.55319148936167, 89.11827956989244, 87.65217391304346, 86.15384615384612, 84.6222222222222, 83.05617977528092, 81.45454545454542, 79.81609195402304, 78.13953488372096, 76.42352941176468, 74.66666666666666, 72.86746987951811, 71.02439024390245, 69.13580246913583, 67.2, 65.21518987341773, 63.179487179487154, 61.0909090909091, 58.94736842105263, 56.74666666666668, 54.486486486486484, 52.16438356164384, 49.777777777777764, 47.323943661971825, 44.80000000000001, 42.202898550724655, 39.52941176470587, 36.776119402985074, 33.939393939393945, 31.015384615384622, 28.0, 24.888888888888896, 21.677419354838708, 18.36065573770491, 14.933333333333325, 11.389830508474576, 7.724137931034487, 3.929824561403509, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [-1, -1, -1, 547.7818181818182, 543.609756097561, 539.3865030674846, 535.1111111111111, 530.7826086956522, 526.4000000000001, 521.9622641509433, 517.4683544303797, 512.9171974522292, 508.3076923076924, 503.6387096774193, 498.9090909090909, 494.11764705882354, 489.2631578947369, 484.34437086092714, 479.36000000000007, 474.3087248322147, 469.1891891891892, 464.0, 458.73972602739724, 453.40689655172423, 448.0, 442.5174825174826, 436.9577464788733, 431.3191489361702, 425.6, 419.79856115107907, 413.9130434782609, 407.94160583941607, 401.88235294117646, 395.7333333333333, 389.4925373134328, 383.1578947368422, 376.72727272727275, 370.19847328244276, 363.5692307692307, 356.8372093023256, 350.0, 343.0551181102362, 336.0, 328.83199999999994, 321.5483870967742, 314.1463414634146, 306.62295081967216, 298.97520661157023, 291.20000000000005, 283.2941176470589, 275.2542372881355, 267.076923076923, 258.75862068965523, 250.29565217391308, 241.68421052631578, 232.92035398230092, 224.0, 222.990990990991, 221.96363636363637, 220.91743119266062, 219.8518518518518, 218.76635514018693, 217.66037735849056, 216.53333333333336, 215.38461538461542, 214.2135922330097, 213.01960784313718, 211.8019801980198, 210.56, 209.29292929292933, 208.00000000000003, 206.68041237113403, 205.33333333333337, 203.95789473684206, 202.55319148936167, 201.11827956989248, 199.65217391304344, 198.15384615384616, 196.62222222222226, 195.0561797752809, 193.45454545454544, 191.81609195402302, 190.13953488372093, 188.42352941176472, 186.66666666666666, 184.86746987951807, 183.02439024390245, 181.1358024691358, 179.2, 177.21518987341773, 175.17948717948715, 173.0909090909091, 170.94736842105266, 168.74666666666667, 166.4864864864865, 164.16438356164383, 161.77777777777777, 159.32394366197184, 156.8, 154.20289855072465, 151.52941176470588, 148.77611940298507, 145.93939393939394, 143.01538461538462, 140.0, 136.88888888888889, 133.67741935483872, 130.36065573770492, 126.93333333333334, 123.38983050847457, 119.72413793103449, 115.9298245614035, 112.0, 110.990990990991, 109.96363636363637, 108.9174311926606, 107.8518518518518, 106.76635514018692, 105.66037735849056, 104.53333333333336, 103.3846153846154, 102.2135922330097, 101.0196078431372, 99.8019801980198, 98.56, 97.29292929292933, 96.00000000000003, 94.68041237113401, 93.33333333333336, 91.95789473684206, 90.55319148936167, 89.11827956989247, 87.65217391304346, 86.15384615384616, 84.62222222222225, 83.05617977528091, 81.45454545454544, 79.81609195402304, 78.13953488372093, 76.4235294117647, 74.66666666666666, 72.86746987951807, 71.02439024390245, 69.1358024691358, 67.2, 65.21518987341773, 63.179487179487154, 61.09090909090909, 58.947368421052644, 56.74666666666668, 54.4864864864865, 52.164383561643845, 49.777777777777764, 47.323943661971825, 44.80000000000001, 42.202898550724655, 39.529411764705884, 36.776119402985074, 33.939393939393945, 31.015384615384605, 28.0, 24.888888888888896, 21.677419354838708, 18.36065573770491, 14.93333333333333, 11.389830508474576, 7.724137931034487, 3.9298245614035086, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1], [-1, -1, 221.9636363636363, 220.91743119266062, 219.8518518518518, 218.76635514018693, 217.6603773584906, 216.5333333333333, 215.38461538461536, 214.21359223300965, 213.01960784313724, 211.8019801980198, 210.56, 209.29292929292933, 208.0, 206.68041237113405, 205.33333333333331, 203.95789473684206, 202.55319148936167, 201.11827956989248, 199.65217391304344, 198.15384615384616, 196.62222222222226, 195.0561797752809, 193.45454545454547, 191.81609195402302, 190.13953488372096, 188.42352941176472, 186.66666666666669, 184.86746987951807, 183.02439024390245, 181.1358024691358, 179.2, 177.21518987341773, 175.17948717948718, 173.09090909090907, 170.94736842105266, 168.74666666666667, 166.48648648648648, 164.16438356164383, 161.77777777777777, 159.3239436619718, 156.8, 154.20289855072465, 151.52941176470588, 148.77611940298507, 145.93939393939394, 143.01538461538462, 140.0, 136.88888888888889, 133.67741935483872, 130.36065573770492, 126.93333333333334, 123.38983050847457, 119.72413793103449, 115.9298245614035, 112.0, 110.990990990991, 109.96363636363637, 108.9174311926606, 107.8518518518518, 106.76635514018692, 105.66037735849056, 104.53333333333336, 103.3846153846154, 102.2135922330097, 101.0196078431372, 99.8019801980198, 98.56, 97.29292929292933, 96.00000000000003, 94.68041237113401, 93.33333333333336, 91.95789473684206, 90.55319148936167, 89.11827956989247, 87.65217391304346, 86.15384615384616, 84.62222222222225, 83.05617977528091, 81.45454545454544, 79.81609195402304, 78.13953488372093, 76.4235294117647, 74.66666666666666, 72.86746987951807, 71.02439024390245, 69.1358024691358, 67.2, 65.21518987341773, 63.179487179487154, 61.09090909090909, 58.947368421052644, 56.74666666666668, 54.4864864864865, 52.164383561643845, 49.777777777777764, 47.323943661971825, 44.80000000000001, 42.202898550724655, 39.529411764705884, 36.776119402985074, 33.939393939393945, 31.015384615384605, 28.0, 24.888888888888896, 21.677419354838708, 18.36065573770491, 14.93333333333333, 11.389830508474576, 7.724137931034487, 3.9298245614035086, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1, -1], [-1, 110.99099099099102, 109.96363636363631, 108.9174311926606, 107.8518518518518, 106.76635514018692, 105.66037735849059, 104.53333333333332, 103.38461538461536, 102.21359223300965, 101.01960784313724, 99.8019801980198, 98.56, 97.29292929292933, 96.0, 94.68041237113405, 93.33333333333333, 91.95789473684206, 90.55319148936167, 89.11827956989247, 87.65217391304346, 86.15384615384616, 84.62222222222225, 83.0561797752809, 81.45454545454547, 79.81609195402304, 78.13953488372094, 76.4235294117647, 74.66666666666669, 72.86746987951807, 71.02439024390245, 69.1358024691358, 67.2, 65.21518987341773, 63.179487179487175, 61.09090909090908, 58.947368421052644, 56.74666666666668, 54.486486486486484, 52.164383561643845, 49.777777777777764, 47.3239436619718, 44.8, 42.202898550724655, 39.52941176470588, 36.776119402985074, 33.93939393939395, 31.015384615384605, 28.0, 24.888888888888896, 21.677419354838708, 18.360655737704906, 14.933333333333334, 11.389830508474576, 7.724137931034485, 3.9298245614035086, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1, -1, -1], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1, -1, -1, -1]], [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7], [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9]]))
    True
    '''
    pass

if __name__ == '__main__':
    import doctest
    doctest.testmod()
